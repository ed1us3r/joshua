FROM registry.access.redhat.com/ubi9/ubi-init:latest  as getter

WORKDIR /tmp/

RUN dnf install -y git

# Prepare next Step
COPY ../custom-util/* .

RUN curl -sLS https://get.arkade.dev | sh

# Install custom util
RUN ./get-cosign.sh && ./get-kubectl.sh


FROM registry.access.redhat.com/ubi9/toolbox:latest

ARG NAME=joshua-base
ARG TYPE=base
ARG BIN_DIR=/usr/local/bin


LABEL name="$NAME" \
    type="k8s" \
    summary="joshua kubernetes engineering container" \
    maintainer="ed1us3r" \
    author="ed1us3r"

ENV EDITOR=nvim \
    CONTAINER_ENV="true" \
    container_env="true" \
    image_name="$NAME" \
    image_type="$TYPE" \
    image_summary="joshua kubernetes engineering container" \
    image_maintainer="ed1us3r" \
    image_author="ed1us3r"

# Install packages
RUN  yum -y upgrade \
  && yum -y install \
  git \
  && yum clean all


# Copy Binaries from getter


COPY --from=getter --chown=root:root /usr/local/bin/arkade ${BIN_DIR}/arkade

COPY --from=getter --chown=root:root /usr/bin/cosign-linux-amd64 ${BIN_DIR}/cosign-linux-amd64

COPY --from=getter --chown=root:root /root/.krew/bin/kubectl* ${BIN_DIR}/kubectl-plugins/

COPY --from=getter --chown=root:root ${BIN_DIR}/kubecolor ${BIN_DIR}/kubecolor

COPY --from=getter --chown=root:root ${BIN_DIR}/helmify ${BIN_DIR}/helmify

COPY --from=getter --chown=root:root ${BIN_DIR}/kubectl ${BIN_DIR}/kubectl

# Create some Sym Links
RUN ln -s ${BIN_DIR}/cosign-linux-amd64 ${BIN_DIR}/cosign \
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-krew ${BIN_DIR}/krew \
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-cnpg ${BIN_DIR}/kubectl-cnpg \
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-tree ${BIN_DIR}/kubectl-tree \ 
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-flame ${BIN_DIR}/kubectl-flame \
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-ctx ${BIN_DIR}/kubectl-ctx \
    && ln -s ${BIN_DIR}/kubectl-plugins/kubectl-ns ${BIN_DIR}/kubectl-ns

# Arkade shit
# Note: you can also run without `sudo` and move the binary yourself
ENV PATH="$PATH:$HOME/.arkade/bin/" \
    PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH" \
    PATH="~/.kubectx:$PATH"
	

RUN arkade get helm \
	&& arkade get popeye \
	&& arkade get yq \
	&& arkade get helmfile \
	&& sudo mv $HOME/.arkade/bin/popeye ${BIN_DIR}/popeye \
	&& sudo mv $HOME/.arkade/bin/helm ${BIN_DIR}/helm \
	&& sudo mv $HOME/.arkade/bin/yq ${BIN_DIR}/yq \
	&& sudo chmod +x ${BIN_DIR}/*	

# install k3d
RUN wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

# install kind
# For AMD64 / x86_64
RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64 \
 && chmod +x ./kind \
 && sudo mv ./kind /usr/local/bin/kind

RUN curl https://raw.githubusercontent.com/jonmosco/kube-ps1/refs/heads/master/kube-ps1.sh -o ${BIN_DIR}/kube-ps1.sh \
  && chmod +x ${BIN_DIR}/kube-ps1.sh \
  && source ${BIN_DIR}/kube-ps1.sh \
  && PS1='[\u@\h \W $(kube_ps1)]\$ '

# add kubectl completion
# Installing bash completion on Linux
## If bash-completion is not installed on Linux, install the 'bash-completion' package
## via your distribution's package manager.
## Load the kubectl completion code for bash into the current shell
#RUN source <(kubectl completion bash) \
#  && kubectl completion bash > ~/.kube/completion.bash.inc \
#  && printf "source '$HOME/.kube/completion.bash.inc'" >> $HOME/.bash_profile \
#  && source $HOME/.bash_profile
